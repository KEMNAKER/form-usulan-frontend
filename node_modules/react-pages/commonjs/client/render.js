"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = render;
var _react = _interopRequireDefault(require("react"));
var _reactRender = _interopRequireWildcard(require("./reactRender.js"));
var _flags = require("./flags.js");
var _excluded = ["element", "containerProps"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// Performs client-side React application rendering.
// Takes `render()` function which renders the actual page.
// Then this rendered page is rendered in a `container`
// (e.g. Redux state `<Connector/>` and such).
// This function is not exported and is not called directly in an application:
// instead specific implementations call this function
// providing their own `render()` logic
// (e.g. Redux + React-router, React-router).
//
function render(_ref) {
  var render = _ref.render,
    _ref$renderParameters = _ref.renderParameters,
    renderParameters = _ref$renderParameters === void 0 ? {} : _ref$renderParameters,
    container = _ref.container;
  var firstRender = true;
  // Renders current React page (inside a container).
  // Returns a Promise for an object holding
  // `render` function for development mode hot reload,
  // and also `store` (if Redux is used).
  function renderPage() {
    if (firstRender) {
      firstRender = false;
    } else {
      window._ReactPages_Page_HotReloadInProgress = true;
    }
    return render(renderParameters).then(function (_ref2) {
      var element = _ref2.element,
        containerProps = _ref2.containerProps,
        rest = _objectWithoutProperties(_ref2, _excluded);
      // if (locale) {
      // 	containerProps.locale = locale
      // }
      renderReactElementTree(
      // Render page `element` inside a container element.
      // E.g. Redux context `<Provider/>`, and others.
      _react["default"].createElement(container, containerProps, element),
      // DOM element to which React markup will be rendered
      getReactContainerElement());
      window._ReactPages_Page_HotReloadInProgress = false;
      return rest;
    });
  }
  // Render the page on the client side.
  return renderPage().then(function (result) {
    return _objectSpread(_objectSpread({}, result), {}, {
      // Deprecated. Don't use.
      rerender: renderPage
    });
  });
}
function renderReactElementTree(element, to) {
  // If using React >= 16 and the content is Server-Side Rendered.
  if ((0, _flags.isServerSidePreloaded)() && (0, _flags.isServerSideRendered)()) {
    // An API introduced in React 16
    // for "hydrating" Server-Side Rendered markup.
    // https://reactjs.org/docs/react-dom.html#hydrate
    (0, _reactRender.hydrate)(element, to);
    return;
  }
  // Clears `element` to prevent React warning:
  // "Calling ReactDOM.render() to hydrate server-rendered markup
  //  will stop working in React v17. Replace the ReactDOM.render() call
  //  with ReactDOM.hydrate() if you want React to attach to the server HTML."
  if (!window._ReactPages_Page_HotReloadInProgress) {
    while (to.firstChild) {
      to.removeChild(to.firstChild);
    }
  }
  (0, _reactRender["default"])(element, to);
}

// Retrieves a variable from `window` erasing it.
function getGlobalVariable(name) {
  var variable = window[name];
  if (variable !== undefined) {
    delete window[name];
  }
  return variable;
}
function getReactContainerElement() {
  var element = document.getElementById('react');
  if (!element) {
    var body = document.body;
    if (!body) {
      throw new Error('<body/> tag not found, make sure this script is added to the end of <body/> rather than inside <head/>.');
    }
    element = document.createElement('div');
    element.setAttribute('id', 'react');
    body.appendChild(element);
  }
  return element;
}
//# sourceMappingURL=render.js.map