"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _createStore;
var _react = _interopRequireDefault(require("react"));
var _redux = require("redux");
var _logOnlyInProduction = require("redux-devtools-extension/logOnlyInProduction.js");
var _asynchronous = _interopRequireDefault(require("./middleware/asynchronous.js"));
var _router = _interopRequireDefault(require("./middleware/router.js"));
var _reducer = _interopRequireDefault(require("./preload/reducer.js"));
var _getData = _interopRequireDefault(require("./preload/getData.js"));
var _reducer2 = _interopRequireDefault(require("./translate/reducer.js"));
var _naming = require("./naming.js");
var _index = require("../router/index.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _createStore(settings, data, createHistoryProtocol, httpClient, options) {
  var reducers = settings.reducers,
    reduxMiddleware = settings.reduxMiddleware,
    reduxStoreEnhancers = settings.reduxStoreEnhancers,
    reduxEventNaming = settings.reduxEventNaming,
    http = settings.http,
    onError = settings.onError,
    getLocale = settings.getLocale,
    codeSplit = settings.codeSplit,
    meta = settings.meta,
    showLoadingInitially = settings.showLoadingInitially;
  var routes = settings.routes;
  var server = options.server,
    devtools = options.devtools,
    stats = options.stats,
    onBeforeNavigate = options.onBeforeNavigate,
    onNavigate = options.onNavigate,
    getCookie = options.getCookie;

  // `routes` will be converted.
  var convertedRoutes;
  var getConvertedRoutes = function getConvertedRoutes() {
    return convertedRoutes;
  };

  // Add `load` data hook.
  var getData = (0, _getData["default"])(codeSplit, server, onError, getLocale, getConvertedRoutes, getCookie);
  if (Array.isArray(routes)) {
    // If there's an error on client side in `setUpAndRender()` then it's called again.
    // And in that case `getData` is set and this error will be thrown.
    // if (routes[0].getData) {
    // 	throw new Error('[react-pages] `getData` found on the root route')
    // }
    routes[0].getData = getData;
  } else {
    // Set `getData`.
    // If there's an error on client side in `setUpAndRender()` then it's called again.
    // And in that case `getData` is set and this error will be thrown.
    // if (routes.props.getData) {
    // 	throw new Error('[react-pages] `getData` found on the root route')
    // }
    routes = _react["default"].cloneElement(routes, {
      getData: getData
    });
    // Convert `found` `<Route/>`s to a JSON structure.
    routes = (0, _index.convertRoutes)(routes);
  }
  convertedRoutes = routes;

  // Redux middleware.
  // User may supply his own Redux middleware.
  var middleware = reduxMiddleware ? reduxMiddleware() : [];

  // Built-in middleware.
  middleware.push(
  // Asynchronous middleware (e.g. for HTTP Ajax calls).
  (0, _asynchronous["default"])(httpClient, reduxEventNaming, server, http.onError, http.getErrorData));
  if (!server) {
    middleware.push((0, _router["default"])(routes, codeSplit, onBeforeNavigate, onNavigate, stats, meta));
  }

  // Redux "store enhancers"
  var storeEnhancers = [];

  // User may supply his own Redux store enhancers.
  if (reduxStoreEnhancers) {
    storeEnhancers.push.apply(storeEnhancers, _toConsumableArray(reduxStoreEnhancers()));
  }
  storeEnhancers.push.apply(storeEnhancers, _toConsumableArray((0, _index.createRouterStoreEnhancers)(routes, createHistoryProtocol, {
    basename: settings.basename
  })));

  // Redux middleware are applied in reverse order.
  // (which is counter-intuitive)
  storeEnhancers.push(_redux.applyMiddleware.apply(void 0, _toConsumableArray(middleware)));

  // Create Redux store.
  var store = getStoreEnhancersComposer(server, devtools).apply(void 0, storeEnhancers)(_redux.createStore)(createReducer(reducers, showLoadingInitially), data);

  // On the client side, add `hotReload()` function to the `store`.
  // (could just add this function to `window` but adding it to the `store` fits more)
  if (!server) {
    // `hotReload` helper function gives the web application means to hot reload its Redux reducers
    store.hotReload = function (reducers) {
      return store.replaceReducer(createReducer(reducers, showLoadingInitially));
    };
  }

  // Initialize `found`.
  (0, _index.initializeRouter)(store);

  // Return the Redux store
  return store;
}
function createReducer(reducers, showLoadingInitially) {
  // Check for reserved reducer names.
  var _iterator = _createForOfIteratorHelper(RESERVED_REDUCER_NAMES),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var reducerName = _step.value;
      if (reducers[reducerName]) {
        throw new Error("\"".concat(reducerName, "\" reducer name is reserved."));
      }
    }
    // Check for `ReduxModule` autogenerated event names conflicts.
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  (0, _naming.checkForAutogeneratedEventNameCollision)(reducers);
  // Clone the object because it will be modified.
  reducers = _objectSpread({}, reducers);
  // Add `found` reducer.
  reducers.found = _index.foundReducer;
  // Add `load` status reducer.
  reducers.preload = (0, _reducer["default"])(showLoadingInitially);
  // // Add `@translate()` reducer.
  // reducers.translation = translateReducer
  // Create the compound reducer.
  return (0, _redux.combineReducers)(reducers);
}
function getStoreEnhancersComposer(server, devtools) {
  // Redux DevTools aren't used on the server side
  if (server) {
    return _redux.compose;
  }

  // Custom behaviour
  if (devtools && devtools.compose) {
    return devtools.compose;
  }

  // With custom options
  if (devtools && devtools.options) {
    return (0, _logOnlyInProduction.composeWithDevTools)(devtools.options);
  }

  // Without custom options
  return _logOnlyInProduction.composeWithDevTools;
}
var RESERVED_REDUCER_NAMES = ['found', 'location', 'preload', 'translation'];
//# sourceMappingURL=store.js.map