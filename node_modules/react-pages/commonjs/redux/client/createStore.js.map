{"version":3,"file":"createStore.js","names":["createStore","settings","options","devtools","stats","onBeforeNavigate","onNavigate","onStoreCreated","normalizeSettings","showLoadingInitially","store","httpClient","createHttpClient","fetch","window","_ReactPages_HttpClient","createStore_","isServerSidePreloaded","getState","createHistoryProtocol","getCookie"],"sources":["../../../lib/redux/client/createStore.js"],"sourcesContent":["import { isServerSidePreloaded } from '../../client/flags.js'\r\nimport createHistoryProtocol from '../../router/client/createHistoryProtocol.js'\r\nimport createStore_ from '../store.js'\r\nimport createHttpClient from '../HttpClient.js'\r\nimport getState from './getState.js'\r\nimport normalizeSettings from '../normalize.js'\r\nimport { getCookie } from '../../client/cookies.js'\r\n\r\n/**\r\n * Creates a Redux store.\r\n * @param  {object} settings\r\n * @param  {object} [options]\r\n * @return {object} store\r\n */\r\nexport default function createStore(settings, options = {}) {\r\n\tconst {\r\n\t\tdevtools,\r\n\t\tstats,\r\n\t\tonBeforeNavigate,\r\n\t\tonNavigate,\r\n\t\tonStoreCreated\r\n\t} = options\r\n\r\n\tsettings = normalizeSettings(settings)\r\n\r\n\t// `showLoadingInitially` is handled in a special way\r\n\t// in case of client-side-only rendering.\r\n\tconst { showLoadingInitially } = settings\r\n\r\n\tlet store\r\n\r\n\t// Create HTTP client (Redux action creator `http` utility)\r\n\tconst httpClient = createHttpClient(settings, () => store, { fetch })\r\n\r\n\t// Store the reference to `httpClient` in `window` for WebSocket message handlers.\r\n\t// WebSocket handlers only run on the client side, so it's fine storing the `httpClient`\r\n\t// in `window`.\r\n\twindow._ReactPages_HttpClient = httpClient\r\n\r\n\t// Create Redux store\r\n\tstore = createStore_(\r\n\t\t{\r\n\t\t\t...settings,\r\n\t\t\tshowLoadingInitially: !isServerSidePreloaded() && showLoadingInitially ? false : showLoadingInitially\r\n\t\t},\r\n\t\tgetState(true),\r\n\t\tcreateHistoryProtocol,\r\n\t\thttpClient, {\r\n\t\t\tdevtools,\r\n\t\t\tstats,\r\n\t\t\tonBeforeNavigate,\r\n\t\t\tonNavigate,\r\n\t\t\tgetCookie\r\n\t\t}\r\n\t)\r\n\r\n\t// `onStoreCreated(store)` is called here.\r\n\t//\r\n\t// For example, client-side-only applications\r\n\t// may capture this `store` as `window.store`\r\n\t// to call `bindActionCreators()` for all actions (globally).\r\n\t//\r\n\t// onStoreCreated: store => window.store = store\r\n\t//\r\n\t// import { bindActionCreators } from 'redux'\r\n\t// import actionCreators from './actions'\r\n\t// const boundActionCreators = bindActionCreators(actionCreators, window.store.dispatch)\r\n\t// export default boundActionCreators\r\n\t//\r\n\t// Not saying that this is even a \"good\" practice,\r\n\t// more like \"legacy code\", but still my employer\r\n\t// happened to have such binding, so I added this feature.\r\n  // Still this technique cuts down on a lot of redundant \"wiring\" code.\r\n  //\r\n\tif (onStoreCreated) {\r\n\t\tonStoreCreated(store)\r\n\t}\r\n\r\n\treturn store\r\n}"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,WAAW,CAACC,QAAQ,EAAgB;EAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;EACzD,IACCC,QAAQ,GAKLD,OAAO,CALVC,QAAQ;IACRC,KAAK,GAIFF,OAAO,CAJVE,KAAK;IACLC,gBAAgB,GAGbH,OAAO,CAHVG,gBAAgB;IAChBC,UAAU,GAEPJ,OAAO,CAFVI,UAAU;IACVC,cAAc,GACXL,OAAO,CADVK,cAAc;EAGfN,QAAQ,GAAG,IAAAO,qBAAiB,EAACP,QAAQ,CAAC;;EAEtC;EACA;EACA,gBAAiCA,QAAQ;IAAjCQ,oBAAoB,aAApBA,oBAAoB;EAE5B,IAAIC,KAAK;;EAET;EACA,IAAMC,UAAU,GAAG,IAAAC,sBAAgB,EAACX,QAAQ,EAAE;IAAA,OAAMS,KAAK;EAAA,GAAE;IAAEG,KAAK,EAALA;EAAM,CAAC,CAAC;;EAErE;EACA;EACA;EACAC,MAAM,CAACC,sBAAsB,GAAGJ,UAAU;;EAE1C;EACAD,KAAK,GAAG,IAAAM,iBAAY,kCAEff,QAAQ;IACXQ,oBAAoB,EAAE,CAAC,IAAAQ,4BAAqB,GAAE,IAAIR,oBAAoB,GAAG,KAAK,GAAGA;EAAoB,IAEtG,IAAAS,oBAAQ,EAAC,IAAI,CAAC,EACdC,iCAAqB,EACrBR,UAAU,EAAE;IACXR,QAAQ,EAARA,QAAQ;IACRC,KAAK,EAALA,KAAK;IACLC,gBAAgB,EAAhBA,gBAAgB;IAChBC,UAAU,EAAVA,UAAU;IACVc,SAAS,EAATA;EACD,CAAC,CACD;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACC;EACA;EACD,IAAIb,cAAc,EAAE;IACnBA,cAAc,CAACG,KAAK,CAAC;EACtB;EAEA,OAAOA,KAAK;AACb"}