{"version":3,"file":"render.js","names":["render","store","matchRoutes","then","renderArgs","isServerSidePreloaded","window","_ReactPages_Page_ServerSideRenderedPageRestorationPrerender","_ReactPages_Page_SkipDataLoad","element","createRouterElement","containerProps"],"sources":["../../../lib/redux/client/render.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport { matchRoutes } from '../../router/index.js'\r\nimport createRouterElement from '../../router/client/createRouterElement.js'\r\nimport { isServerSidePreloaded } from '../../client/flags.js'\r\n\r\n// Renders the current page React element inside the `to` DOM element.\r\n//\r\n// Returns a `Promise` resolving to `{ store, component }`,\r\n// where `component` is the rendered React component\r\n// and `store` is the Redux store.\r\n//\r\nexport default function render({ store })\r\n{\r\n\treturn matchRoutes(store).then((renderArgs) => {\r\n\t\t// The first pass of initial client-side render\r\n\t\t// was to render the markup which matches server-side one.\r\n\t\t// The second pass is about rendering after resolving `getData`.\r\n\t\tif (isServerSidePreloaded()) {\r\n\t\t\twindow._ReactPages_Page_ServerSideRenderedPageRestorationPrerender = false\r\n\t\t\twindow._ReactPages_Page_SkipDataLoad = false\r\n\t\t}\r\n\r\n\t\t// // `routes` are used when comparing `instantBack` chain items\r\n\t\t// // for resetting `instantBack` chain when the same route is encountered twice.\r\n\t\t// window._ReactPages_Page_RouteComponents = renderArgs.routeIndices\r\n\r\n\t\treturn {\r\n\t\t\telement: createRouterElement(renderArgs, store),\r\n\t\t\tcontainerProps: { store },\r\n\t\t\tstore\r\n\t\t}\r\n\t})\r\n}"],"mappings":";;;;;;AAAA;AAEA;AACA;AACA;AAA6D;AAE7D;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,MAAM,OAC9B;EAAA,IADiCC,KAAK,QAALA,KAAK;EAErC,OAAO,IAAAC,kBAAW,EAACD,KAAK,CAAC,CAACE,IAAI,CAAC,UAACC,UAAU,EAAK;IAC9C;IACA;IACA;IACA,IAAI,IAAAC,4BAAqB,GAAE,EAAE;MAC5BC,MAAM,CAACC,2DAA2D,GAAG,KAAK;MAC1ED,MAAM,CAACE,6BAA6B,GAAG,KAAK;IAC7C;;IAEA;IACA;IACA;;IAEA,OAAO;MACNC,OAAO,EAAE,IAAAC,+BAAmB,EAACN,UAAU,EAAEH,KAAK,CAAC;MAC/CU,cAAc,EAAE;QAAEV,KAAK,EAALA;MAAM,CAAC;MACzBA,KAAK,EAALA;IACD,CAAC;EACF,CAAC,CAAC;AACH"}