"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createStore;
var _flags = require("../../client/flags.js");
var _createHistoryProtocol = _interopRequireDefault(require("../../router/client/createHistoryProtocol.js"));
var _store = _interopRequireDefault(require("../store.js"));
var _HttpClient = _interopRequireDefault(require("../HttpClient.js"));
var _getState = _interopRequireDefault(require("./getState.js"));
var _normalize = _interopRequireDefault(require("../normalize.js"));
var _cookies = require("../../client/cookies.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * Creates a Redux store.
 * @param  {object} settings
 * @param  {object} [options]
 * @return {object} store
 */
function createStore(settings) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var devtools = options.devtools,
    stats = options.stats,
    onBeforeNavigate = options.onBeforeNavigate,
    onNavigate = options.onNavigate,
    onStoreCreated = options.onStoreCreated;
  settings = (0, _normalize["default"])(settings);

  // `showLoadingInitially` is handled in a special way
  // in case of client-side-only rendering.
  var _settings = settings,
    showLoadingInitially = _settings.showLoadingInitially;
  var store;

  // Create HTTP client (Redux action creator `http` utility)
  var httpClient = (0, _HttpClient["default"])(settings, function () {
    return store;
  }, {
    fetch: fetch
  });

  // Store the reference to `httpClient` in `window` for WebSocket message handlers.
  // WebSocket handlers only run on the client side, so it's fine storing the `httpClient`
  // in `window`.
  window._ReactPages_HttpClient = httpClient;

  // Create Redux store
  store = (0, _store["default"])(_objectSpread(_objectSpread({}, settings), {}, {
    showLoadingInitially: !(0, _flags.isServerSidePreloaded)() && showLoadingInitially ? false : showLoadingInitially
  }), (0, _getState["default"])(true), _createHistoryProtocol["default"], httpClient, {
    devtools: devtools,
    stats: stats,
    onBeforeNavigate: onBeforeNavigate,
    onNavigate: onNavigate,
    getCookie: _cookies.getCookie
  });

  // `onStoreCreated(store)` is called here.
  //
  // For example, client-side-only applications
  // may capture this `store` as `window.store`
  // to call `bindActionCreators()` for all actions (globally).
  //
  // onStoreCreated: store => window.store = store
  //
  // import { bindActionCreators } from 'redux'
  // import actionCreators from './actions'
  // const boundActionCreators = bindActionCreators(actionCreators, window.store.dispatch)
  // export default boundActionCreators
  //
  // Not saying that this is even a "good" practice,
  // more like "legacy code", but still my employer
  // happened to have such binding, so I added this feature.
  // Still this technique cuts down on a lot of redundant "wiring" code.
  //
  if (onStoreCreated) {
    onStoreCreated(store);
  }
  return store;
}
//# sourceMappingURL=createStore.js.map