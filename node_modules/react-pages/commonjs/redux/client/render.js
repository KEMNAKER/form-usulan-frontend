"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = render;
var _react = _interopRequireDefault(require("react"));
var _index = require("../../router/index.js");
var _createRouterElement = _interopRequireDefault(require("../../router/client/createRouterElement.js"));
var _flags = require("../../client/flags.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
// Renders the current page React element inside the `to` DOM element.
//
// Returns a `Promise` resolving to `{ store, component }`,
// where `component` is the rendered React component
// and `store` is the Redux store.
//
function render(_ref) {
  var store = _ref.store;
  return (0, _index.matchRoutes)(store).then(function (renderArgs) {
    // The first pass of initial client-side render
    // was to render the markup which matches server-side one.
    // The second pass is about rendering after resolving `getData`.
    if ((0, _flags.isServerSidePreloaded)()) {
      window._ReactPages_Page_ServerSideRenderedPageRestorationPrerender = false;
      window._ReactPages_Page_SkipDataLoad = false;
    }

    // // `routes` are used when comparing `instantBack` chain items
    // // for resetting `instantBack` chain when the same route is encountered twice.
    // window._ReactPages_Page_RouteComponents = renderArgs.routeIndices

    return {
      element: (0, _createRouterElement["default"])(renderArgs, store),
      containerProps: {
        store: store
      },
      store: store
    };
  });
}
//# sourceMappingURL=render.js.map